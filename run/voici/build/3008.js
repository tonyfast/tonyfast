(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[3008,8679],{54324:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.serialize=t.deserialize=void 0,t.deserialize=function(e){let t;return t="string"==typeof e?JSON.parse(e):function(e){const t=new DataView(e),n=t.getUint32(0),r=[];if(n<2)throw new Error("Invalid incoming Kernel Message");for(let e=1;e<=n;e++)r.push(t.getUint32(4*e));const s=new Uint8Array(e.slice(r[0],r[1])),i=JSON.parse(new TextDecoder("utf8").decode(s));i.buffers=[];for(let t=1;t<n;t++){const n=r[t],s=r[t+1]||e.byteLength;i.buffers.push(new DataView(e.slice(n,s)))}return i}(e),t},t.serialize=function(e){var t;let n;return n=(null===(t=e.buffers)||void 0===t?void 0:t.length)?function(e){const t=[],n=[],r=new TextEncoder;let s=[];void 0!==e.buffers&&(s=e.buffers,delete e.buffers);const i=r.encode(JSON.stringify(e));n.push(i.buffer);for(let e=0;e<s.length;e++){const t=s[e];n.push(ArrayBuffer.isView(t)?t.buffer:t)}const f=n.length;t.push(4*(f+1));for(let e=0;e+1<n.length;e++)t.push(t[t.length-1]+n[e].byteLength);const l=new Uint8Array(t[t.length-1]+n[n.length-1].byteLength),u=new DataView(l.buffer);u.setUint32(0,f);for(let e=0;e<t.length;e++)u.setUint32(4*(e+1),t[e]);for(let e=0;e<n.length;e++)l.set(new Uint8Array(n[e]),t[e]);return l.buffer}(e):JSON.stringify(e),n}},58679:()=>{}}]);
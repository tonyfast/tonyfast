"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[3693],{83693:(e,s,t)=>{t.r(s),t.d(s,{BaseKernel:()=>a,FALLBACK_KERNEL:()=>v,IKernelSpecs:()=>y,IKernels:()=>f,KernelSpecs:()=>w,Kernels:()=>m});var n,i=t(34013),r=t(4947);class a{constructor(e){this._history=[],this._executionCount=0,this._isDisposed=!1,this._disposed=new r.Signal(this),this._parentHeader=void 0,this._parent=void 0;const{id:s,name:t,location:n,sendMessage:i}=e;this._id=s,this._name=t,this._location=n,this._sendMessage=i}get ready(){return Promise.resolve()}get isDisposed(){return this._isDisposed}get disposed(){return this._disposed}get id(){return this._id}get name(){return this._name}get location(){return this._location}get executionCount(){return this._executionCount}get parentHeader(){return this._parentHeader}get parent(){return this._parent}dispose(){this.isDisposed||(this._isDisposed=!0,this._disposed.emit(void 0))}async handleMessage(e){switch(this._busy(e),this._parent=e,e.header.msg_type){case"kernel_info_request":await this._kernelInfo(e);break;case"execute_request":await this._execute(e);break;case"input_reply":this.inputReply(e.content);break;case"inspect_request":await this._inspect(e);break;case"is_complete_request":await this._isCompleteRequest(e);break;case"complete_request":await this._complete(e);break;case"history_request":await this._historyRequest(e);break;case"comm_open":await this.commOpen(e);break;case"comm_msg":await this.commMsg(e);break;case"comm_close":await this.commClose(e)}this._idle(e)}stream(e,s=undefined){var t;const n=void 0!==s?s:this._parentHeader,r=i.KernelMessage.createMessage({channel:"iopub",msgType:"stream",session:null!==(t=null==n?void 0:n.session)&&void 0!==t?t:"",parentHeader:n,content:e});this._sendMessage(r)}displayData(e,s=undefined){var t,n;const r=void 0!==s?s:this._parentHeader;e.metadata=null!==(t=e.metadata)&&void 0!==t?t:{};const a=i.KernelMessage.createMessage({channel:"iopub",msgType:"display_data",session:null!==(n=null==r?void 0:r.session)&&void 0!==n?n:"",parentHeader:r,content:e});this._sendMessage(a)}inputRequest(e,s=undefined){var t;const n=void 0!==s?s:this._parentHeader,r=i.KernelMessage.createMessage({channel:"stdin",msgType:"input_request",session:null!==(t=null==n?void 0:n.session)&&void 0!==t?t:"",parentHeader:n,content:e});this._sendMessage(r)}publishExecuteResult(e,s=undefined){var t;const n=void 0!==s?s:this._parentHeader,r=i.KernelMessage.createMessage({channel:"iopub",msgType:"execute_result",session:null!==(t=null==n?void 0:n.session)&&void 0!==t?t:"",parentHeader:n,content:e});this._sendMessage(r)}publishExecuteError(e,s=undefined){var t;const n=void 0!==s?s:this._parentHeader,r=i.KernelMessage.createMessage({channel:"iopub",msgType:"error",session:null!==(t=null==n?void 0:n.session)&&void 0!==t?t:"",parentHeader:n,content:e});this._sendMessage(r)}updateDisplayData(e,s=undefined){var t;const n=void 0!==s?s:this._parentHeader,r=i.KernelMessage.createMessage({channel:"iopub",msgType:"update_display_data",session:null!==(t=null==n?void 0:n.session)&&void 0!==t?t:"",parentHeader:n,content:e});this._sendMessage(r)}clearOutput(e,s=undefined){var t;const n=void 0!==s?s:this._parentHeader,r=i.KernelMessage.createMessage({channel:"iopub",msgType:"clear_output",session:null!==(t=null==n?void 0:n.session)&&void 0!==t?t:"",parentHeader:n,content:e});this._sendMessage(r)}handleComm(e,s,t,n,r=undefined){var a;const o=void 0!==r?r:this._parentHeader,c=i.KernelMessage.createMessage({channel:"iopub",msgType:e,session:null!==(a=null==o?void 0:o.session)&&void 0!==a?a:"",parentHeader:o,content:s,metadata:t,buffers:n});this._sendMessage(c)}_idle(e){const s=i.KernelMessage.createMessage({msgType:"status",session:e.header.session,parentHeader:e.header,channel:"iopub",content:{execution_state:"idle"}});this._sendMessage(s)}_busy(e){const s=i.KernelMessage.createMessage({msgType:"status",session:e.header.session,parentHeader:e.header,channel:"iopub",content:{execution_state:"busy"}});this._sendMessage(s)}async _kernelInfo(e){const s=await this.kernelInfoRequest(),t=i.KernelMessage.createMessage({msgType:"kernel_info_reply",channel:"shell",session:e.header.session,parentHeader:e.header,content:s});this._sendMessage(t)}async _historyRequest(e){const s=e,t=i.KernelMessage.createMessage({msgType:"history_reply",channel:"shell",parentHeader:s.header,session:e.header.session,content:{status:"ok",history:this._history}});this._sendMessage(t)}_executeInput(e){const s=e,t=s.content.code,n=i.KernelMessage.createMessage({msgType:"execute_input",parentHeader:s.header,channel:"iopub",session:e.header.session,content:{code:t,execution_count:this._executionCount}});this._sendMessage(n)}async _execute(e){const s=e,t=s.content;t.store_history&&this._executionCount++,this._parentHeader=s.header,this._executeInput(s),t.store_history&&this._history.push([0,0,t.code]);const n=await this.executeRequest(s.content),r=i.KernelMessage.createMessage({msgType:"execute_reply",channel:"shell",parentHeader:s.header,session:e.header.session,content:n});this._sendMessage(r)}async _complete(e){const s=e,t=await this.completeRequest(s.content),n=i.KernelMessage.createMessage({msgType:"complete_reply",parentHeader:s.header,channel:"shell",session:e.header.session,content:t});this._sendMessage(n)}async _inspect(e){const s=e,t=await this.inspectRequest(s.content),n=i.KernelMessage.createMessage({msgType:"inspect_reply",parentHeader:s.header,channel:"shell",session:e.header.session,content:t});this._sendMessage(n)}async _isCompleteRequest(e){const s=e,t=await this.isCompleteRequest(s.content),n=i.KernelMessage.createMessage({msgType:"is_complete_reply",parentHeader:s.header,channel:"shell",session:e.header.session,content:t});this._sendMessage(n)}}class o{constructor(e={}){if(this._map=new Map,this._changed=new r.Signal(this),this._isDisposed=!1,this._itemCmp=e.itemCmp||n.itemCmp,e.values)for(const s in e.values)this._map.set(s,e.values[s])}get type(){return"Map"}get changed(){return this._changed}get isDisposed(){return this._isDisposed}get size(){return this._map.size}set(e,s){const t=this._map.get(e);if(void 0===s)throw Error("Cannot set an undefined value, use remove");const n=this._itemCmp;return void 0!==t&&n(t,s)||(this._map.set(e,s),this._changed.emit({type:t?"change":"add",key:e,oldValue:t,newValue:s})),t}get(e){return this._map.get(e)}has(e){return this._map.has(e)}keys(){const e=[];return this._map.forEach(((s,t)=>{e.push(t)})),e}values(){const e=[];return this._map.forEach(((s,t)=>{e.push(s)})),e}delete(e){const s=this._map.get(e);return this._map.delete(e)&&this._changed.emit({type:"remove",key:e,oldValue:s,newValue:void 0}),s}clear(){const e=this.keys();for(let s=0;s<e.length;s++)this.delete(e[s])}dispose(){this.isDisposed||(this._isDisposed=!0,r.Signal.clearData(this),this._map.clear())}}!function(e){e.itemCmp=function(e,s){return e===s}}(n||(n={}));var c=t(54324),l=t(92233),h=t(79988);new Error("timeout while waiting for mutex to become available"),new Error("mutex already locked");const u=new Error("request for lock canceled");var d=function(e,s,t,n){return new(t||(t=Promise))((function(i,r){function a(e){try{c(n.next(e))}catch(e){r(e)}}function o(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var s;e.done?i(e.value):(s=e.value,s instanceof t?s:new t((function(e){e(s)}))).then(a,o)}c((n=n.apply(e,s||[])).next())}))};class p{constructor(e,s=u){if(this._maxConcurrency=e,this._cancelError=s,this._queue=[],this._waiters=[],e<=0)throw new Error("semaphore must be initialized to a positive value");this._value=e}acquire(){const e=this.isLocked(),s=new Promise(((e,s)=>this._queue.push({resolve:e,reject:s})));return e||this._dispatch(),s}runExclusive(e){return d(this,void 0,void 0,(function*(){const[s,t]=yield this.acquire();try{return yield e(s)}finally{t()}}))}waitForUnlock(){return d(this,void 0,void 0,(function*(){return this.isLocked()?new Promise((e=>this._waiters.push({resolve:e}))):Promise.resolve()}))}isLocked(){return this._value<=0}release(){if(this._maxConcurrency>1)throw new Error("this method is unavailable on semaphores with concurrency > 1; use the scoped release returned by acquire instead");if(this._currentReleaser){const e=this._currentReleaser;this._currentReleaser=void 0,e()}}cancel(){this._queue.forEach((e=>e.reject(this._cancelError))),this._queue=[]}_dispatch(){const e=this._queue.shift();if(!e)return;let s=!1;this._currentReleaser=()=>{s||(s=!0,this._value++,this._resolveWaiters(),this._dispatch())},e.resolve([this._value--,this._currentReleaser])}_resolveWaiters(){this._waiters.forEach((e=>e.resolve())),this._waiters=[]}}class _{constructor(e){this._semaphore=new p(1,e)}acquire(){return e=this,s=void 0,n=function*(){const[,e]=yield this._semaphore.acquire();return e},new((t=void 0)||(t=Promise))((function(i,r){function a(e){try{c(n.next(e))}catch(e){r(e)}}function o(e){try{c(n.throw(e))}catch(e){r(e)}}function c(e){var s;e.done?i(e.value):(s=e.value,s instanceof t?s:new t((function(e){e(s)}))).then(a,o)}c((n=n.apply(e,s||[])).next())}));var e,s,t,n}runExclusive(e){return this._semaphore.runExclusive((()=>e()))}isLocked(){return this._semaphore.isLocked()}waitForUnlock(){return this._semaphore.waitForUnlock()}release(){this._semaphore.release()}cancel(){return this._semaphore.cancel()}}var g=t(49943);class m{constructor(e){this._kernels=new o,this._clients=new o,this._kernelClients=new o;const{kernelspecs:s}=e;this._kernelspecs=s}async startNew(e){const{id:s,name:t,location:n}=e,i=this._kernelspecs.factories.get(t);if(!i)return{id:s,name:t};const r=new _,a=(e,s,t)=>{var n;const i=this._kernels.get(e);if(!i)throw Error(`No kernel ${e}`);this._clients.set(s,t),null===(n=this._kernelClients.get(e))||void 0===n||n.add(s),t.on("message",(async e=>{let s;if(e instanceof ArrayBuffer)e=new Uint8Array(e).buffer,s=(0,c.deserialize)(e);else{if("string"!=typeof e)return;s=(0,c.deserialize)(e)}"input_reply"===s.header.msg_type?i.handleMessage(s):(async e=>{await r.runExclusive((async()=>{await i.ready,await i.handleMessage(e)}))})(s)}));const a=()=>{var t;this._clients.delete(s),null===(t=this._kernelClients.get(e))||void 0===t||t.delete(s)};i.disposed.connect(a),t.onclose=a},o=null!=s?s:l.UUID.uuid4(),u=`${m.WS_BASE_URL}api/kernels/${o}/channels`,d=this._kernels.get(o);if(d)return{id:d.id,name:d.name};const p=await i({id:o,sendMessage:e=>{const s=e.header.session,t=this._clients.get(s);if(!t)return void console.warn(`Trying to send message on removed socket for kernel ${o}`);const n=(0,c.serialize)(e);if("iopub"!==e.channel)t.send(n);else{const e=this._kernelClients.get(o);null==e||e.forEach((e=>{var s;null===(s=this._clients.get(e))||void 0===s||s.send(n)}))}},name:t,location:n});this._kernels.set(o,p),this._kernelClients.set(o,new Set);const g=new h.Server(u);return g.on("connection",(e=>{var s;const t=null!==(s=new URL(e.url).searchParams.get("session_id"))&&void 0!==s?s:"";a(o,t,e)})),g.on("close",(()=>{this._clients.keys().forEach((e=>{var s;const t=this._clients.get(e);(null==t?void 0:t.readyState)===WebSocket.CLOSED&&(this._clients.delete(e),null===(s=this._kernelClients.get(o))||void 0===s||s.delete(e))}))})),p.disposed.connect((()=>{g.close(),this._kernels.delete(o),this._kernelClients.delete(o)})),{id:p.id,name:p.name}}async restart(e){const s=this._kernels.get(e);if(!s)throw Error(`Kernel ${e} does not exist`);const{id:t,name:n,location:i}=s;return s.dispose(),this.startNew({id:t,name:n,location:i})}async shutdown(e){var s;null===(s=this._kernels.delete(e))||void 0===s||s.dispose()}}!function(e){e.WS_BASE_URL=g.PageConfig.getBaseUrl().replace(/^http/,"ws")}(m||(m={}));const f=new l.Token("@jupyterlite/kernel:IKernels"),v="javascript",y=new l.Token("@jupyterlite/kernel:IKernelSpecs");class w{constructor(){this._specs=new Map,this._factories=new Map}get specs(){return 0===this._specs.size?null:{default:this.defaultKernelName,kernelspecs:Object.fromEntries(this._specs)}}get defaultKernelName(){let e=g.PageConfig.getOption("defaultKernelName");if(!e&&this._specs.size){const s=Array.from(this._specs.keys());s.sort(),e=s[0]}return e||v}get factories(){return this._factories}register(e){const{spec:s,create:t}=e;this._specs.set(s.name,s),this._factories.set(s.name,t)}}},54324:(e,s)=>{Object.defineProperty(s,"__esModule",{value:!0}),s.serialize=s.deserialize=void 0,s.deserialize=function(e){let s;return s="string"==typeof e?JSON.parse(e):function(e){const s=new DataView(e),t=s.getUint32(0),n=[];if(t<2)throw new Error("Invalid incoming Kernel Message");for(let e=1;e<=t;e++)n.push(s.getUint32(4*e));const i=new Uint8Array(e.slice(n[0],n[1])),r=JSON.parse(new TextDecoder("utf8").decode(i));r.buffers=[];for(let s=1;s<t;s++){const t=n[s],i=n[s+1]||e.byteLength;r.buffers.push(new DataView(e.slice(t,i)))}return r}(e),s},s.serialize=function(e){var s;let t;return t=(null===(s=e.buffers)||void 0===s?void 0:s.length)?function(e){const s=[],t=[],n=new TextEncoder;let i=[];void 0!==e.buffers&&(i=e.buffers,delete e.buffers);const r=n.encode(JSON.stringify(e));t.push(r.buffer);for(let e=0;e<i.length;e++){const s=i[e];t.push(ArrayBuffer.isView(s)?s.buffer:s)}const a=t.length;s.push(4*(a+1));for(let e=0;e+1<t.length;e++)s.push(s[s.length-1]+t[e].byteLength);const o=new Uint8Array(s[s.length-1]+t[t.length-1].byteLength),c=new DataView(o.buffer);c.setUint32(0,a);for(let e=0;e<s.length;e++)c.setUint32(4*(e+1),s[e]);for(let e=0;e<t.length;e++)o.set(new Uint8Array(t[e]),s[e]);return o.buffer}(e):JSON.stringify(e),t}}}]);